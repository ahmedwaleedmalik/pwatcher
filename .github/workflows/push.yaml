name: Push

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'charts/pwatcher/README.md'

env:
  DOCKER_FILE_PATH: Dockerfile
  GOLANG_VERSION: 1.16

jobs: 
  build:
    runs-on: ubuntu-latest 
    name: Build
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"   

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

    - name: Set up Go
      id: go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}

    - name: Lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${{ env.GOLANG_CI_LINT_VERSION }}
        golangci-lint run --timeout=10m ./...
      
    - name: Generate Tag
      id: generate_tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
        RELEASE_BRANCHES: main
        DRY_RUN: true
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ env.DOCKER_FILE_PATH  }}
        pull: true
        push: true
        cache-to: type=inline
        tags: |
          ${{ github.repository }}:${{ steps.generate_tag.outputs.new_tag }}
          ${{ github.repository }}:latest
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}

    ##############################
    ## Add steps to generate required artifacts for a release here(helm chart)
    ##############################

    # Generate tag for chart without "v"
    - name: Generate Tag
      id: generate_chart_tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: patch
        RELEASE_BRANCHES: main
        DRY_RUN: true

    # Update chart tag to the latest semver tag
    - name: Update Chart Version
      env:
        VERSION: ${{ steps.generate_chart_tag.outputs.new_tag }}
      run: make bump-chart
    
    # Publish helm chart
    - name: Publish helm chart
      uses: stefanprodan/helm-gh-pages@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        charts_dir: charts
        linting: on

    # Commit back changes
    - name: Commit files
      run: |
        git config --local user.email "bot-user@gmail.com"
        git config --local user.name "bot-user"
        git status 
        git add .
        git commit -m "[skip-ci] Update artifacts" -a

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Latest Tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
        RELEASE_BRANCHES: main